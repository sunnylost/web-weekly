{"version":3,"sources":["index.min.js"],"names":["normalizeName","name","toString","test","TypeError","toLowerCase","normalizeValue","value","Headers","headers","this","map","forEach","append","Object","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","Error","rejected","arrayBuffer","then","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","url","options","credentials","mode","referrer","form","trim","split","bytes","shift","replace","join","decodeURIComponent","xhr","head","pairs","getAllResponseHeaders","header","key","Response","bodyInit","type","status","ok","statusText","self","fetch","list","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","call","e","input","init","request","responseURL","getResponseHeader","XMLHttpRequest","response","responseText","open","withCredentials","responseType","setRequestHeader","send","polyfill","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$asap","arg","lib$es6$promise$asap$$queue","lib$es6$promise$asap$$len","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$useNextTick","nextTick","process","version","versions","node","match","Array","isArray","setImmediate","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","document","createTextNode","observe","characterData","data","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","i","undefined","lib$es6$promise$asap$$attemptVertex","r","require","vertx","runOnLoop","runOnContext","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFullfillment","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","promise","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","lib$es6$promise$asap$$default","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","constructor","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","length","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","lib$es6$promise$promise$resolve$$resolve","object","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","global","Function","P","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","c","_settledAt","_willSettleAt","state","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","all","race","_setScheduler","_asap","arguments","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","define","module"],"mappings":"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","file":"index.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = name.toString();\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = value.toString();\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(url, options) {\n    options = options || {}\n    this.url = url\n\n    this.credentials = options.credentials || 'omit'\n    this.headers = new Headers(options.headers)\n    this.method = normalizeMethod(options.method || 'GET')\n    this.mode = options.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && options.body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(options.body)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this._initBody(bodyInit)\n    this.type = 'default'\n    this.url = null\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n  }\n\n  Body.call(Response.prototype)\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    // TODO: Request constructor should accept input, init\n    var request\n    if (Request.prototype.isPrototypeOf(input) && !init) {\n      request = input\n    } else {\n      request = new Request(input, init)\n    }\n\n    return new Promise(function(resolve, reject) {\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})();\n\n/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.2.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    function lib$es6$promise$asap$$asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    var lib$es6$promise$asap$$default = lib$es6$promise$asap$$asap;\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$default(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$default(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise’s eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$default;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$default(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n"],"sourceRoot":"/source/"}